---
name: Terraform repo governance
on:
  schedule:
    - cron: '43 0 * * 0'
  workflow_dispatch:

permissions:
  issues: write

jobs:
  getrepos:
    runs-on: ubuntu-latest
    outputs:
      repoarray: ${{ steps.graphql.outputs.repoarray }}
    steps:
      - name: GH CLI
        id: graphql
        run: |
          RESULT=$(gh api graphql --paginate -f query='query {
            search(query: "terraform-azurerm-avm user:azure", type: REPOSITORY, first: 100) {
                repositoryCount
                edges {
                  node {
                    ... on Repository {
                      name
                    }
                  }
                }
              }
            }')
          NUMREPOS=$(echo $RESULT | jq '.data.search.repositoryCount')
          echo "Number of repos found: $NUMREPOS"
          REPOARRAY=$(echo $RESULT | jq '.data.search.edges | [.[].node.name]')
          echo "repoarray=$REPOARRAY" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  governance:
    runs-on: ubuntu-latest
    needs: getrepos
    strategy:
      max-parallel: 5
      matrix:
        repo: ${{ fromJson(needs.getrepos.outputs.repoarray) }}
    steps:
      - name: Test
        run: |
          echo ${{ matrix.repo }}
